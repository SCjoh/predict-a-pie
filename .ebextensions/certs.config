
Resources:
  AWSEBAutoScalingGroup:
    Metadata:
      AWS::CloudFormation::Authentication:
        S3Auth:
          type: "s3"
          buckets: ["site-ssl-certificates"]
          roleName: 
            "Fn::GetOptionSetting": 
              Namespace: "aws:autoscaling:launchconfiguration"
              OptionName: "IamInstanceProfile"
              DefaultValue: "aws-elasticbeanstalk-ec2-role"
              
files:
  # Private key
  "/etc/pki/tls/certs/nn_inventor_city.key":
    mode: "000644"
    owner: root
    group: root
    authentication: "S3Auth"
    source: https://site-ssl-certificates.s3.ca-central-1.amazonaws.com/nn_inventor_city.key 

  # Chain Crt
  "/etc/pki/tls/certs/nn_inventor_city_chain.crt":
    mode: "000644"
    owner: root
    group: root
    authentication: "S3Auth"
    source: https://site-ssl-certificates.s3.ca-central-1.amazonaws.com/nn_inventor_city_chain.crt 

  # Private key
  "/etc/pki/tls/certs/nn-staging_inventor_city_PK.key":
    mode: "000644"
    owner: root
    group: root
    authentication: "S3Auth"
    source: https://site-ssl-certificates.s3.ca-central-1.amazonaws.com/nn-staging_inventor_city_PK.key 

  # Chain Crt
  "/etc/pki/tls/certs/nn-staging_inventor_city_chain.crt":
    mode: "000644"
    owner: root
    group: root
    authentication: "S3Auth"
    source: https://site-ssl-certificates.s3.ca-central-1.amazonaws.com/nn-staging_inventor_city_chain.crt 

container_commands: 
  01_check_prod_or_staging:
      command: 'if [ "$NODE_ENV" == "production" ]; then "$NODE_ENV" &gt; /var/log/prod.txt; else  "$NODE_ENV" &gt; /var/log/other.txt;fi'
  02_restart_nginx:
    command: "service nginx restart" 
  03-build:
    command: "npm run build" 